{"version":3,"sources":["assets/check.svg","assets/cross.svg","components/Loader.js","js/GoogleCalendar.js","components/Login.js","components/Room.js","js/FormattedDateDelta.js","components/Rooms.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Loader","props","size","color","react_default","a","createElement","className","viewBox","style","width","height","cx","cy","r","fill","strokeWidth","strokeMiterlimit","stroke","GoogleCalendar","signInStatusChanged","clientLoaded","gapi","window","load","client","init","authConfig","then","auth2","getAuthInstance","isSignedIn","listen","get","signIn","items","timeMin","timeMax","calendar","freebusy","query","resource","timeZone","calendarExpansionMax","Login","loading","role","aria-label","onClick","Room","imageSrc","imageAlt","busy","cross","check","alt","src","name","FormattedDateDelta","first","last","Object","classCallCheck","this","minutes","getMinutes","seconds","getSeconds","concat","Rooms","state","rooms","nextUpdate","timeRemaining","fetchRooms","now","Date","previous","next","setMinutes","setHours","getHours","queryResources","_this","queryItems","map","item","id","email","toJSON","parseCalendarResponse","setTimeout","setState","response","roomResults","result","calendars","sort","b","localeCompare","key","length","formatDate","entries","roomsConfig","entry","emailPrefix","emailSufix","setInterval","_this$state","toString","Component","App","isLoading","isLogged","render","Rooms_Rooms","_this2","loadClient","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9f416add.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/check.58288801.svg\";","module.exports = __webpack_public_path__ + \"static/media/cross.d31a54d0.svg\";","import React from 'react'\nimport '../css/loader.css'\n\nexport default function Loader(props) {\n  const { size, color } = props\n  return (\n    <div className=\"loader\">\n      <svg className=\"circular\" viewBox=\"25 25 50 50\" style={{ width: size, height: size }}>\n        <circle className=\"path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" strokeWidth=\"2\" strokeMiterlimit=\"10\" stroke={ color }/>\n      </svg>\n    </div>\n  )\n}","import authConfig from '../config/authConfig.json'\n\nexport default class GoogleCalendar {\n  static loadClient(signInStatusChanged, clientLoaded) {\n    GoogleCalendar.gapi = window.gapi\n    GoogleCalendar.gapi.load('client:auth2', () => {\n      GoogleCalendar.gapi.client.init(authConfig).then(() => {\n        GoogleCalendar.gapi.auth2.getAuthInstance().isSignedIn.listen(signInStatusChanged)\n        signInStatusChanged(GoogleCalendar.gapi.auth2.getAuthInstance().isSignedIn.get())\n\n        clientLoaded()\n      })\n    })\n  }\n\n  static signIn() {\n    GoogleCalendar.gapi.auth2.getAuthInstance().signIn()\n  }\n\n  static queryResources(items, timeMin, timeMax) {\n    return GoogleCalendar.gapi.client.calendar.freebusy.query({\n      resource: {\n        timeMin,\n        timeMax,\n        items,\n        timeZone: 'GMT-03',\n        calendarExpansionMax: 50\n      }\n    })\n  }\n}","import React from 'react'\nimport Loader from './Loader'\nimport GoogleCalendar from '../js/GoogleCalendar'\n\nimport '../css/login.css'\n\nexport default function Login(props) {\n  const { loading } = props\n  return (\n    <section className=\"login\">\n      <h1>Quero Sala PK</h1>\n      <h2>FaÃ§a login com sua conta da PlayKids para continuar <span role=\"img\" aria-label=\"upside-down-smile\">ðŸ™ƒ</span></h2>\n\n      <button className={ loading ? 'loading' : '' } onClick={ !loading ? GoogleCalendar.signIn : null }>\n        Autorizar\n        { loading && <Loader size=\"2rem\" color=\"white\"/> }\n      </button>\n    </section>\n  )\n}","import React from 'react';\nimport '../css/room.css';\n\nimport check from '../assets/check.svg'\nimport cross from '../assets/cross.svg'\n\nexport default function Room(props) {\n  let imageSrc, imageAlt\n  if (props.busy) {\n    imageSrc = cross\n    imageAlt = 'Room is busy'\n  } else {\n    imageSrc = check\n    imageAlt = 'Room is free'\n  }\n\n  return (\n    <div className=\"room\">\n      <div className=\"state\">\n        <img alt={ imageAlt } src={ imageSrc }/>\n      </div>\n      <div>{ props.name }</div>\n    </div>\n  )\n}","export default class FormattedDateDelta {\n  constructor(first, last) {\n    this.minutes = last.getMinutes() - first.getMinutes()\n    if (this.minutes < 0) {\n      this.minutes += 60\n    }\n\n    this.seconds = last.getSeconds() - first.getSeconds()\n    if (this.seconds < 0) {\n      this.seconds += 60\n    }\n\n    if (this.seconds > 0) {\n      this.minutes--\n    }\n  }\n\n  toString() {\n    return `${this.minutes}m e ${this.seconds}s`\n  }\n}","import React, { Component } from 'react'\nimport Room from './Room'\nimport Loader from './Loader'\nimport GoogleCalendar from '../js/GoogleCalendar'\nimport FormattedDateDelta from '../js/FormattedDateDelta'\nimport roomsConfig from '../config/roomsConfig.json'\n\nimport '../css/rooms.css'\n\nexport default class Rooms extends Component {\n\n  state = {\n    rooms: [],\n    loading: true,\n    nextUpdate: null,\n    timeRemaining: null\n  }\n\n  componentDidMount() {\n    this.queryItems = \n      Object.entries(roomsConfig.rooms)\n        .map(entry => ({ \n          id: entry[0],\n          name: entry[1],\n          email: roomsConfig.emailPrefix + entry[0] + roomsConfig.emailSufix\n        }))\n\n    this.fetchRooms()\n    setInterval(this.formatDate, 1000)\n  }\n\n  fetchRooms = () => {\n    let now = new Date()\n    let previous = new Date()\n    let next = new Date()\n\n    if (now.getMinutes() >= 30) {\n      previous.setMinutes(30, 0)\n      next.setHours(now.getHours() + 1, 0, 0)\n    } else {\n      previous.setMinutes(0, 0)\n      next.setMinutes(30, 0)\n    }\n\n    GoogleCalendar.queryResources(\n      this.queryItems.map(item => ({ id: item.email })),\n      previous.toJSON(),\n      next.toJSON()\n    ).then(this.parseCalendarResponse)\n\n    setTimeout(this.fetchRooms, next - now + 1000)\n    this.setState({ loading: true, nextUpdate: next, timeRemaining: new FormattedDateDelta(now, next) })\n  }\n\n  parseCalendarResponse = (response) => {\n    let roomResults = response.result.calendars\n    let rooms = this.queryItems.sort((a, b) => a.name.localeCompare(b.name)).map(item =>\n      <Room key={item.id} busy={roomResults[item.email].busy.length > 0} name={item.name}/>\n    )\n\n    this.setState({ rooms, loading: false })\n  }\n\n  formatDate = () => {\n    this.setState({ timeRemaining: new FormattedDateDelta(new Date(), this.state.nextUpdate) })\n  }\n\n  render() {\n    const { rooms, loading, timeRemaining } = this.state\n    return (\n      <section className=\"rooms\">\n        <div className=\"next-update\">\n          <h2>Tempo para a prÃ³xima atualizaÃ§Ã£o: { !loading ? timeRemaining.toString() : '' }</h2>\n          { loading && <Loader color=\"white\"/> }\n        </div>\n        <div className=\"rooms-grid\">\n          {rooms}\n        </div>\n      </section>\n    )\n  }\n}","import React, { Component } from 'react'\nimport Login from './components/Login'\nimport Rooms from './components/Rooms'\n\nimport GoogleCalendar from './js/GoogleCalendar'\nimport './css/style.css'\n\nclass App extends Component {\n\n  state = {\n    isLoading: true,\n    isLogged: false\n  }\n\n  componentDidMount() {\n    GoogleCalendar.loadClient(isLogged => this.setState({ isLogged }), () => this.setState({ isLoading: false }))\n  }\n\n  render = () => (\n    <div className=\"app\">\n      { !this.state.isLogged && <Login loading={this.state.isLoading} /> }\n      { this.state.isLogged && <Rooms/>}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}